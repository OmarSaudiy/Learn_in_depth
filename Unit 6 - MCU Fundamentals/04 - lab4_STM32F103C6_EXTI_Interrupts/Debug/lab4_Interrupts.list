
lab4_Interrupts.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000198  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002c8  080002d0  000102d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002c8  080002c8  000102d0  2**0
                  CONTENTS
  4 .ARM          00000000  080002c8  080002c8  000102d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002c8  080002d0  000102d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002c8  080002c8  000102c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002cc  080002cc  000102cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002d0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002d0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000102d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000002e2  00000000  00000000  000102f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000bf  00000000  00000000  000105db  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000050  00000000  00000000  000106a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000038  00000000  00000000  000106f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000b33  00000000  00000000  00010728  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000111  00000000  00000000  0001125b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003213  00000000  00000000  0001136c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001457f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000074  00000000  00000000  000145fc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002b0 	.word	0x080002b0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002b0 	.word	0x080002b0

08000170 <main>:
	}pin;
}R32_Register;


int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	(APB2ENR)->pin.pin0 = 1; 		/*Enable Clock For AFIO*/
 8000174:	4a16      	ldr	r2, [pc, #88]	; (80001d0 <main+0x60>)
 8000176:	6813      	ldr	r3, [r2, #0]
 8000178:	f043 0301 	orr.w	r3, r3, #1
 800017c:	6013      	str	r3, [r2, #0]
	(APB2ENR)->pin.pin2 = 1; 		/*Enable Clock For GPIOA*/
 800017e:	4a14      	ldr	r2, [pc, #80]	; (80001d0 <main+0x60>)
 8000180:	6813      	ldr	r3, [r2, #0]
 8000182:	f043 0304 	orr.w	r3, r3, #4
 8000186:	6013      	str	r3, [r2, #0]

	(NVIC_ISER0)->pin.pin6 = 1;
 8000188:	4a12      	ldr	r2, [pc, #72]	; (80001d4 <main+0x64>)
 800018a:	6813      	ldr	r3, [r2, #0]
 800018c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000190:	6013      	str	r3, [r2, #0]

	(GPIOA_CRL)->pin.pin2 = 1;
 8000192:	4a11      	ldr	r2, [pc, #68]	; (80001d8 <main+0x68>)
 8000194:	6813      	ldr	r3, [r2, #0]
 8000196:	f043 0304 	orr.w	r3, r3, #4
 800019a:	6013      	str	r3, [r2, #0]
	(AFIO_EXTICR1)->reg=0;
 800019c:	4b0f      	ldr	r3, [pc, #60]	; (80001dc <main+0x6c>)
 800019e:	2200      	movs	r2, #0
 80001a0:	601a      	str	r2, [r3, #0]
	(GPIOA_CRH)->reg &= 0xFF0FFFFF; /*Configure PIN13 as output*/
 80001a2:	4b0f      	ldr	r3, [pc, #60]	; (80001e0 <main+0x70>)
 80001a4:	681b      	ldr	r3, [r3, #0]
 80001a6:	4a0e      	ldr	r2, [pc, #56]	; (80001e0 <main+0x70>)
 80001a8:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80001ac:	6013      	str	r3, [r2, #0]
	(GPIOA_CRH)->reg |= 0x00200000;	/*Configure PIN13 as output*/
 80001ae:	4b0c      	ldr	r3, [pc, #48]	; (80001e0 <main+0x70>)
 80001b0:	681b      	ldr	r3, [r3, #0]
 80001b2:	4a0b      	ldr	r2, [pc, #44]	; (80001e0 <main+0x70>)
 80001b4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001b8:	6013      	str	r3, [r2, #0]

	(EXTI_IMR)->pin.pin0 = 1;
 80001ba:	4a0a      	ldr	r2, [pc, #40]	; (80001e4 <main+0x74>)
 80001bc:	6813      	ldr	r3, [r2, #0]
 80001be:	f043 0301 	orr.w	r3, r3, #1
 80001c2:	6013      	str	r3, [r2, #0]
	(EXTI_RTSR)->pin.pin0 = 1;
 80001c4:	4a05      	ldr	r2, [pc, #20]	; (80001dc <main+0x6c>)
 80001c6:	6813      	ldr	r3, [r2, #0]
 80001c8:	f043 0301 	orr.w	r3, r3, #1
 80001cc:	6013      	str	r3, [r2, #0]
	while(1);
 80001ce:	e7fe      	b.n	80001ce <main+0x5e>
 80001d0:	40021018 	.word	0x40021018
 80001d4:	e000e100 	.word	0xe000e100
 80001d8:	40010800 	.word	0x40010800
 80001dc:	40010408 	.word	0x40010408
 80001e0:	40010804 	.word	0x40010804
 80001e4:	40010400 	.word	0x40010400

080001e8 <EXTI0_IRQHandler>:

	return 0;
}

void EXTI0_IRQHandler()
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	(EXTI_PR)->pin.pin0 = 1;
 80001ec:	4a07      	ldr	r2, [pc, #28]	; (800020c <EXTI0_IRQHandler+0x24>)
 80001ee:	6813      	ldr	r3, [r2, #0]
 80001f0:	f043 0301 	orr.w	r3, r3, #1
 80001f4:	6013      	str	r3, [r2, #0]
	(*GPIOA_ODR).reg ^= 1<<13;
 80001f6:	4b06      	ldr	r3, [pc, #24]	; (8000210 <EXTI0_IRQHandler+0x28>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	4a05      	ldr	r2, [pc, #20]	; (8000210 <EXTI0_IRQHandler+0x28>)
 80001fc:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000200:	6013      	str	r3, [r2, #0]
}
 8000202:	bf00      	nop
 8000204:	46bd      	mov	sp, r7
 8000206:	bc80      	pop	{r7}
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	40010414 	.word	0x40010414
 8000210:	4001080c 	.word	0x4001080c

08000214 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000214:	480d      	ldr	r0, [pc, #52]	; (800024c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000216:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000218:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800021c:	480c      	ldr	r0, [pc, #48]	; (8000250 <LoopForever+0x6>)
  ldr r1, =_edata
 800021e:	490d      	ldr	r1, [pc, #52]	; (8000254 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000220:	4a0d      	ldr	r2, [pc, #52]	; (8000258 <LoopForever+0xe>)
  movs r3, #0
 8000222:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000224:	e002      	b.n	800022c <LoopCopyDataInit>

08000226 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000226:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000228:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800022a:	3304      	adds	r3, #4

0800022c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800022c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800022e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000230:	d3f9      	bcc.n	8000226 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000232:	4a0a      	ldr	r2, [pc, #40]	; (800025c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000234:	4c0a      	ldr	r4, [pc, #40]	; (8000260 <LoopForever+0x16>)
  movs r3, #0
 8000236:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000238:	e001      	b.n	800023e <LoopFillZerobss>

0800023a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800023a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800023c:	3204      	adds	r2, #4

0800023e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800023e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000240:	d3fb      	bcc.n	800023a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000242:	f000 f811 	bl	8000268 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000246:	f7ff ff93 	bl	8000170 <main>

0800024a <LoopForever>:

LoopForever:
    b LoopForever
 800024a:	e7fe      	b.n	800024a <LoopForever>
  ldr   r0, =_estack
 800024c:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000250:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000254:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000258:	080002d0 	.word	0x080002d0
  ldr r2, =_sbss
 800025c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000260:	2000001c 	.word	0x2000001c

08000264 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000264:	e7fe      	b.n	8000264 <ADC1_2_IRQHandler>
	...

08000268 <__libc_init_array>:
 8000268:	b570      	push	{r4, r5, r6, lr}
 800026a:	2500      	movs	r5, #0
 800026c:	4e0c      	ldr	r6, [pc, #48]	; (80002a0 <__libc_init_array+0x38>)
 800026e:	4c0d      	ldr	r4, [pc, #52]	; (80002a4 <__libc_init_array+0x3c>)
 8000270:	1ba4      	subs	r4, r4, r6
 8000272:	10a4      	asrs	r4, r4, #2
 8000274:	42a5      	cmp	r5, r4
 8000276:	d109      	bne.n	800028c <__libc_init_array+0x24>
 8000278:	f000 f81a 	bl	80002b0 <_init>
 800027c:	2500      	movs	r5, #0
 800027e:	4e0a      	ldr	r6, [pc, #40]	; (80002a8 <__libc_init_array+0x40>)
 8000280:	4c0a      	ldr	r4, [pc, #40]	; (80002ac <__libc_init_array+0x44>)
 8000282:	1ba4      	subs	r4, r4, r6
 8000284:	10a4      	asrs	r4, r4, #2
 8000286:	42a5      	cmp	r5, r4
 8000288:	d105      	bne.n	8000296 <__libc_init_array+0x2e>
 800028a:	bd70      	pop	{r4, r5, r6, pc}
 800028c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000290:	4798      	blx	r3
 8000292:	3501      	adds	r5, #1
 8000294:	e7ee      	b.n	8000274 <__libc_init_array+0xc>
 8000296:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800029a:	4798      	blx	r3
 800029c:	3501      	adds	r5, #1
 800029e:	e7f2      	b.n	8000286 <__libc_init_array+0x1e>
 80002a0:	080002c8 	.word	0x080002c8
 80002a4:	080002c8 	.word	0x080002c8
 80002a8:	080002c8 	.word	0x080002c8
 80002ac:	080002cc 	.word	0x080002cc

080002b0 <_init>:
 80002b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002b2:	bf00      	nop
 80002b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002b6:	bc08      	pop	{r3}
 80002b8:	469e      	mov	lr, r3
 80002ba:	4770      	bx	lr

080002bc <_fini>:
 80002bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002be:	bf00      	nop
 80002c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002c2:	bc08      	pop	{r3}
 80002c4:	469e      	mov	lr, r3
 80002c6:	4770      	bx	lr
